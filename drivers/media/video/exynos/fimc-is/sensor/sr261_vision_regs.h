/* drivers/media/video/sr130pc20_regs_1_1.h
 *
 * Driver for sr130pc20 (VGA Camera) from Siliconfile
 *
 * Copyright (C) 2012, SAMSUNG ELECTRONICS
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 */

#ifndef __SR261_VISION_REGS_H__
#define __SR261_VISION_REGS_H__

struct sr261_vision_reg {
	u16 addr;
	u8 data;
};

static struct sr261_vision_reg sr261_init_regs[] = {
//p code start(2013.09.13)
{0x4600,0x90},
{0x4601,0x40},
{0x4602,0x74},
{0x4603,0x74},
{0x4604,0x46},
{0x4605,0xf0},
{0x4606,0xa3},
{0x4607,0x74},
{0x4608,0x0b},
{0x4609,0xf0},
{0x460a,0x22},
{0x460b,0x78},
{0x460c,0x08},
{0x460d,0xe6},
{0x460e,0x08},
{0x460f,0xf6},
{0x4610,0x90},
{0x4611,0xc0},
{0x4612,0x00},
{0x4613,0xe0},
{0x4614,0x18},
{0x4615,0xf6},
{0x4616,0x90},
{0x4617,0x40},
{0x4618,0x42},
{0x4619,0xe0},
{0x461a,0x20},
{0x461b,0xe4},
{0x461c,0x30},
{0x461d,0x20},
{0x461e,0xe3},
{0x461f,0x2d},
{0x4620,0xe6},
{0x4621,0x30},
{0x4622,0xe3},
{0x4623,0x29},
{0x4624,0x08},
{0x4625,0x66},
{0x4626,0xff},
{0x4627,0x18},
{0x4628,0xf6},
{0x4629,0x90},
{0x462a,0xc0},
{0x462b,0x01},
{0x462c,0xe0},
{0x462d,0x5f},
{0x462e,0xf6},
{0x462f,0xe6},
{0x4630,0x90},
{0x4631,0xc0},
{0x4632,0x00},
{0x4633,0xf0},
{0x4634,0x90},
{0x4635,0x41},
{0x4636,0xe1},
{0x4637,0xe0},
{0x4638,0x54},
{0x4639,0x0f},
{0x463a,0x90},
{0x463b,0x80},
{0x463c,0x15},
{0x463d,0xf0},
{0x463e,0x90},
{0x463f,0x40},
{0x4640,0x6c},
{0x4641,0xe0},
{0x4642,0xfe},
{0x4643,0xa3},
{0x4644,0xe0},
{0x4645,0xaa},
{0x4646,0x06},
{0x4647,0xf9},
{0x4648,0x12},
{0x4649,0x06},
{0x464a,0xd3},
{0x464b,0x80},
{0x464c,0x13},
{0x464d,0x78},
{0x464e,0x08},
{0x464f,0xe6},
{0x4650,0x79},
{0x4651,0x09},
{0x4652,0x67},
{0x4653,0xff},
{0x4654,0xf6},
{0x4655,0x90},
{0x4656,0xc0},
{0x4657,0x01},
{0x4658,0xe0},
{0x4659,0x5f},
{0x465a,0xf6},
{0x465b,0xe6},
{0x465c,0x90},
{0x465d,0xc0},
{0x465e,0x00},
{0x465f,0xf0},
{0x4660,0x90},
{0x4661,0x40},
{0x4662,0x51},
{0x4663,0xe0},
{0x4664,0x30},
{0x4665,0xe7},
{0x4666,0x46},
{0x4667,0x20},
{0x4668,0xe6},
{0x4669,0x43},
{0x466a,0x90},
{0x466b,0xa0},
{0x466c,0x10},
{0x466d,0xe0},
{0x466e,0xff},
{0x466f,0xa3},
{0x4670,0xe0},
{0x4671,0x90},
{0x4672,0x40},
{0x4673,0xb0},
{0x4674,0xcf},
{0x4675,0xf0},
{0x4676,0xa3},
{0x4677,0xef},
{0x4678,0xf0},
{0x4679,0x90},
{0x467a,0xa0},
{0x467b,0x16},
{0x467c,0xe0},
{0x467d,0xff},
{0x467e,0xa3},
{0x467f,0xe0},
{0x4680,0x90},
{0x4681,0x40},
{0x4682,0xb6},
{0x4683,0xcf},
{0x4684,0xf0},
{0x4685,0xa3},
{0x4686,0xef},
{0x4687,0xf0},
{0x4688,0x90},
{0x4689,0xa0},
{0x468a,0x12},
{0x468b,0xe0},
{0x468c,0xff},
{0x468d,0xa3},
{0x468e,0xe0},
{0x468f,0x90},
{0x4690,0x40},
{0x4691,0xb2},
{0x4692,0xcf},
{0x4693,0xf0},
{0x4694,0xa3},
{0x4695,0xef},
{0x4696,0xf0},
{0x4697,0x90},
{0x4698,0xa0},
{0x4699,0x14},
{0x469a,0xe0},
{0x469b,0xff},
{0x469c,0xa3},
{0x469d,0xe0},
{0x469e,0x90},
{0x469f,0x40},
{0x46a0,0xb4},
{0x46a1,0xcf},
{0x46a2,0xf0},
{0x46a3,0xa3},
{0x46a4,0xef},
{0x46a5,0xf0},
{0x46a6,0x90},
{0x46a7,0x40},
{0x46a8,0x51},
{0x46a9,0xe0},
{0x46aa,0x44},
{0x46ab,0x40},
{0x46ac,0xf0},
{0x46ad,0x78},
{0x46ae,0x08},
{0x46af,0xe6},
{0x46b0,0x20},
{0x46b1,0xe3},
{0x46b2,0x03},
{0x46b3,0x02},
{0x46b4,0x47},
{0x46b5,0x81},
{0x46b6,0x90},
{0x46b7,0x80},
{0x46b8,0x00},
{0x46b9,0xe0},
{0x46ba,0x30},
{0x46bb,0xe5},
{0x46bc,0x03},
{0x46bd,0x02},
{0x46be,0x47},
{0x46bf,0x81},
{0x46c0,0x90},
{0x46c1,0x4f},
{0x46c2,0x40},
{0x46c3,0xe0},
{0x46c4,0x60},
{0x46c5,0x03},
{0x46c6,0x02},
{0x46c7,0x47},
{0x46c8,0x7b},
{0x46c9,0x90},
{0x46ca,0x4f},
{0x46cb,0x00},
{0x46cc,0xe0},
{0x46cd,0xfe},
{0x46ce,0xa3},
{0x46cf,0xe0},
{0x46d0,0xfb},
{0x46d1,0xaa},
{0x46d2,0x06},
{0x46d3,0xe4},
{0x46d4,0xf9},
{0x46d5,0xf8},
{0x46d6,0x90},
{0x46d7,0x40},
{0x46d8,0xb0},
{0x46d9,0xe0},
{0x46da,0xfe},
{0x46db,0xa3},
{0x46dc,0xe0},
{0x46dd,0xff},
{0x46de,0xe4},
{0x46df,0xfc},
{0x46e0,0xfd},
{0x46e1,0x12},
{0x46e2,0x04},
{0x46e3,0xa0},
{0x46e4,0xe4},
{0x46e5,0xfb},
{0x46e6,0x7a},
{0x46e7,0x04},
{0x46e8,0xf9},
{0x46e9,0xf8},
{0x46ea,0x12},
{0x46eb,0x05},
{0x46ec,0x2b},
{0x46ed,0x90},
{0x46ee,0xa0},
{0x46ef,0x10},
{0x46f0,0xee},
{0x46f1,0xf0},
{0x46f2,0xa3},
{0x46f3,0xef},
{0x46f4,0xf0},
{0x46f5,0x90},
{0x46f6,0x4f},
{0x46f7,0x02},
{0x46f8,0xe0},
{0x46f9,0xfe},
{0x46fa,0xa3},
{0x46fb,0xe0},
{0x46fc,0xfb},
{0x46fd,0xaa},
{0x46fe,0x06},
{0x46ff,0xe4},
{0x4700,0xf9},
{0x4701,0xf8},
{0x4702,0x90},
{0x4703,0x40},
{0x4704,0xb2},
{0x4705,0xe0},
{0x4706,0xfe},
{0x4707,0xa3},
{0x4708,0xe0},
{0x4709,0xff},
{0x470a,0xe4},
{0x470b,0xfc},
{0x470c,0xfd},
{0x470d,0x12},
{0x470e,0x04},
{0x470f,0xa0},
{0x4710,0xe4},
{0x4711,0xfb},
{0x4712,0x7a},
{0x4713,0x04},
{0x4714,0xf9},
{0x4715,0xf8},
{0x4716,0x12},
{0x4717,0x05},
{0x4718,0x2b},
{0x4719,0x90},
{0x471a,0xa0},
{0x471b,0x12},
{0x471c,0xee},
{0x471d,0xf0},
{0x471e,0xa3},
{0x471f,0xef},
{0x4720,0xf0},
{0x4721,0x90},
{0x4722,0x4f},
{0x4723,0x04},
{0x4724,0xe0},
{0x4725,0xfe},
{0x4726,0xa3},
{0x4727,0xe0},
{0x4728,0xfb},
{0x4729,0xaa},
{0x472a,0x06},
{0x472b,0xe4},
{0x472c,0xf9},
{0x472d,0xf8},
{0x472e,0x90},
{0x472f,0x40},
{0x4730,0xb4},
{0x4731,0xe0},
{0x4732,0xfe},
{0x4733,0xa3},
{0x4734,0xe0},
{0x4735,0xff},
{0x4736,0xe4},
{0x4737,0xfc},
{0x4738,0xfd},
{0x4739,0x12},
{0x473a,0x04},
{0x473b,0xa0},
{0x473c,0xe4},
{0x473d,0xfb},
{0x473e,0x7a},
{0x473f,0x04},
{0x4740,0xf9},
{0x4741,0xf8},
{0x4742,0x12},
{0x4743,0x05},
{0x4744,0x2b},
{0x4745,0x90},
{0x4746,0xa0},
{0x4747,0x14},
{0x4748,0xee},
{0x4749,0xf0},
{0x474a,0xa3},
{0x474b,0xef},
{0x474c,0xf0},
{0x474d,0x90},
{0x474e,0x4f},
{0x474f,0x06},
{0x4750,0xe0},
{0x4751,0xfe},
{0x4752,0xa3},
{0x4753,0xe0},
{0x4754,0xfb},
{0x4755,0xaa},
{0x4756,0x06},
{0x4757,0xe4},
{0x4758,0xf9},
{0x4759,0xf8},
{0x475a,0x90},
{0x475b,0x40},
{0x475c,0xb6},
{0x475d,0xe0},
{0x475e,0xfe},
{0x475f,0xa3},
{0x4760,0xe0},
{0x4761,0xff},
{0x4762,0xe4},
{0x4763,0xfc},
{0x4764,0xfd},
{0x4765,0x12},
{0x4766,0x04},
{0x4767,0xa0},
{0x4768,0xe4},
{0x4769,0xfb},
{0x476a,0x7a},
{0x476b,0x04},
{0x476c,0xf9},
{0x476d,0xf8},
{0x476e,0x12},
{0x476f,0x05},
{0x4770,0x2b},
{0x4771,0x90},
{0x4772,0xa0},
{0x4773,0x16},
{0x4774,0xee},
{0x4775,0xf0},
{0x4776,0xa3},
{0x4777,0xef},
{0x4778,0xf0},
{0x4779,0x80},
{0x477a,0x06},
{0x477b,0x90},
{0x477c,0x4f},
{0x477d,0x40},
{0x477e,0xe0},
{0x477f,0x14},
{0x4780,0xf0},
{0x4781,0x90},
{0x4782,0x40},
{0x4783,0x47},
{0x4784,0xe0},
{0x4785,0xff},
{0x4786,0xe4},
{0x4787,0xfc},
{0x4788,0xfd},
{0x4789,0xfe},
{0x478a,0xfb},
{0x478b,0x7a},
{0x478c,0x04},
{0x478d,0xf9},
{0x478e,0xf8},
{0x478f,0x12},
{0x4790,0x04},
{0x4791,0xa0},
{0x4792,0xc0},
{0x4793,0x06},
{0x4794,0xc0},
{0x4795,0x07},
{0x4796,0x90},
{0x4797,0xa0},
{0x4798,0x10},
{0x4799,0xe0},
{0x479a,0xfe},
{0x479b,0xa3},
{0x479c,0xe0},
{0x479d,0xfb},
{0x479e,0xaa},
{0x479f,0x06},
{0x47a0,0xe4},
{0x47a1,0xf9},
{0x47a2,0xf8},
{0x47a3,0xd0},
{0x47a4,0x07},
{0x47a5,0xd0},
{0x47a6,0x06},
{0x47a7,0x12},
{0x47a8,0x05},
{0x47a9,0x2b},
{0x47aa,0x90},
{0x47ab,0x80},
{0x47ac,0xb1},
{0x47ad,0xef},
{0x47ae,0xf0},
{0x47af,0x90},
{0x47b0,0x40},
{0x47b1,0x48},
{0x47b2,0xe0},
{0x47b3,0xff},
{0x47b4,0xe4},
{0x47b5,0xfc},
{0x47b6,0xfd},
{0x47b7,0xfe},
{0x47b8,0xfb},
{0x47b9,0x7a},
{0x47ba,0x04},
{0x47bb,0xf9},
{0x47bc,0xf8},
{0x47bd,0x12},
{0x47be,0x04},
{0x47bf,0xa0},
{0x47c0,0xc0},
{0x47c1,0x06},
{0x47c2,0xc0},
{0x47c3,0x07},
{0x47c4,0x90},
{0x47c5,0xa0},
{0x47c6,0x12},
{0x47c7,0xe0},
{0x47c8,0xfe},
{0x47c9,0xa3},
{0x47ca,0xe0},
{0x47cb,0xfb},
{0x47cc,0xaa},
{0x47cd,0x06},
{0x47ce,0xe4},
{0x47cf,0xf9},
{0x47d0,0xf8},
{0x47d1,0xd0},
{0x47d2,0x07},
{0x47d3,0xd0},
{0x47d4,0x06},
{0x47d5,0x12},
{0x47d6,0x05},
{0x47d7,0x2b},
{0x47d8,0x90},
{0x47d9,0x80},
{0x47da,0xb3},
{0x47db,0xef},
{0x47dc,0xf0},
{0x47dd,0x90},
{0x47de,0x40},
{0x47df,0x49},
{0x47e0,0xe0},
{0x47e1,0xff},
{0x47e2,0xe4},
{0x47e3,0xfc},
{0x47e4,0xfd},
{0x47e5,0xfe},
{0x47e6,0xfb},
{0x47e7,0x7a},
{0x47e8,0x04},
{0x47e9,0xf9},
{0x47ea,0xf8},
{0x47eb,0x12},
{0x47ec,0x04},
{0x47ed,0xa0},
{0x47ee,0xc0},
{0x47ef,0x06},
{0x47f0,0xc0},
{0x47f1,0x07},
{0x47f2,0x90},
{0x47f3,0xa0},
{0x47f4,0x14},
{0x47f5,0xe0},
{0x47f6,0xfe},
{0x47f7,0xa3},
{0x47f8,0xe0},
{0x47f9,0xfb},
{0x47fa,0xaa},
{0x47fb,0x06},
{0x47fc,0xe4},
{0x47fd,0xf9},
{0x47fe,0xf8},
{0x47ff,0xd0},
{0x4800,0x07},
{0x4801,0xd0},
{0x4802,0x06},
{0x4803,0x12},
{0x4804,0x05},
{0x4805,0x2b},
{0x4806,0x90},
{0x4807,0x80},
{0x4808,0xb2},
{0x4809,0xef},
{0x480a,0xf0},
{0x480b,0x90},
{0x480c,0x40},
{0x480d,0x4a},
{0x480e,0xe0},
{0x480f,0xff},
{0x4810,0xe4},
{0x4811,0xfc},
{0x4812,0xfd},
{0x4813,0xfe},
{0x4814,0xfb},
{0x4815,0x7a},
{0x4816,0x04},
{0x4817,0xf9},
{0x4818,0xf8},
{0x4819,0x12},
{0x481a,0x04},
{0x481b,0xa0},
{0x481c,0xc0},
{0x481d,0x06},
{0x481e,0xc0},
{0x481f,0x07},
{0x4820,0x90},
{0x4821,0xa0},
{0x4822,0x16},
{0x4823,0xe0},
{0x4824,0xfe},
{0x4825,0xa3},
{0x4826,0xe0},
{0x4827,0xfb},
{0x4828,0xaa},
{0x4829,0x06},
{0x482a,0xe4},
{0x482b,0xf9},
{0x482c,0xf8},
{0x482d,0xd0},
{0x482e,0x07},
{0x482f,0xd0},
{0x4830,0x06},
{0x4831,0x12},
{0x4832,0x05},
{0x4833,0x2b},
{0x4834,0x90},
{0x4835,0x80},
{0x4836,0xb0},
{0x4837,0xef},
{0x4838,0xf0},
{0x4839,0x22},
{0x4045,0xc0},
{0x4046,0xde},
//p code end
};

static struct sr261_vision_reg sr261_vision_mode_regs[] = {
{0x6103,0x01},	// soft reset
{0x5009,0x30},	// pad_drv_strength
{0x500A,0x00},

{0x4041,0x40},	// disable MIPI update
{0x4042,0x20},	// [7]:otp disable, [5]:default init disable

{0x5000,0x03},	// clk_con	  // parelle port disable : 0x0F=>0x03
{0x5006,0x33},	// Mode_pll_5

{0x80B0,0x40},	// dig gb ofs
{0x80B1,0x40},	// dig gr ofs
{0x80B2,0x40},	// dig blue ofs
{0x80B3,0x40},	// dig red ofs

{0xA031,0x02},	// adpc_ctl2 - disable scan otp
{0xA051,0x00},	// fmt_ctrl2

{0xB004,0x44},	// tx_test_mode

//	start  //
{0xA010,0x08},	// dg
{0xA012,0x08},	// dg
{0xA014,0x08},	// dg
{0xA016,0x08},	// dg
{0xa070,0xff},	// ssd window(1~7) enable
{0xa071,0x11},	// ssd window 8 enable
{0xA096,0xFF},	// ratio adjust of blue data and red data (x 1.875)

{0x6201,0x10},	// fine integration time

{0x6340,0x08},	// frame_length_lines
{0x6341,0x3E},
{0x6342,0x02},	// line_length_lines
{0x6343,0x78},
{0x634C,0x00},	// X output size
{0x634D,0xB8},
{0x634E,0x00},	// Y output size 184 x 104
{0x634F,0x68},

{0x8000,0x3c},	// r_tg_ctl1	([5]:en_vs_mode, [4]:en_cdrk_xsubsamp)
{0x8002,0x60},	// r_tg_ctl2
{0x8003,0xD4},	// r_tg_ctl4	([7]:vs_mode_hgt_sel, [6]:vs_mode_wth_sel, [5]:en_col_bin_dig, [4:3]:en_x_sub_rdrk)
{0x800D,0x80},	// pd_flush_ctl2	([7]: en_f_int_ctl_flu_prd)

{0x8045,0xB5},	// Ramp rst offset
{0x8047,0xAF},	// Ramp sig offset(normal)

{0x804B,0x03},	// 20121119 bias ctl en
{0x804E,0x00},	// 20121119 pixel_bias_ctl1([7:4]:int_dmn_pxl_bias,[3:0]:scn_dmn_pxl_bias)

// mcu setting part(2013.03.14 Rev.AE)
{0x4200,0x70},
{0x4231,0x02},
{0x4238,0x40},
{0x4239,0x00},
{0x4100,0x30},	// B[7]:ae statistic engine enable
{0x421d,0x79},
{0x4220,0x02},	// exp120
{0x4221,0x0f},
{0x4228,0x08},	// expmax120
{0x4229,0x3c},
{0x422c,0x09},	// expmax100
{0x422d,0xe4},
{0x4212,0x02},	// YTh
{0x4213,0x30},	// AE Target
{0x4200,0xf1},	// B[7]ae enable , B[0] ae default func toggle
// mcu setting end

{0x8053,0x00},	// 20121119 cds_bias_ctl3([3:0]:cds_amp2_bias)
{0x8058,0x71},	// dcdc_ctl1		([6:4]:dcdc_osc_ctrl,	[1]:dcdc_clk_sel)
{0x809A,0x04},	// readout line number control of the frame obp
{0x809B,0x0F},	// analog_pwr_dn_ctl([3]:en_cds_pwr_dn_vb,[2]:en_ramp_pwr_dn_vb,[1]:en_ramp_bgr_pwr_dn_vb,[0]:en_dcdc_pwr_dn_vb)
{0x80A1,0x5D},	// blc_ctl2 ([6:4]:adp_dead_pxl_th_wgt => x0.375)
{0x80A7,0x20},	// blc_ctl8 ([7:5]:row_obp_dpc_rjt_opt)
{0x80AD,0x8C},	// dig_blc_offset -140
{0x80AE,0x08},	// col_blc_dead_pxl_th

{0x80C1,0x19},	// curr_frm_obp_avg_wgt (x0.2)
{0x80C2,0x18},	// frm_obp_avg_pga_wgt (x0.75)

{0x8104,0x00},
{0x8105,0x40},	// ramp_preset1_ful_pos
{0x8107,0x31},	// ramp_preset1_ful_neg
{0x8108,0x00},
{0x8109,0x93},	// ramp_preset2_ful_pos
{0x810A,0x00},
{0x810B,0x65},	// ramp_preset2_ful_neg
{0x810C,0x00},
{0x810D,0x3F},	// ramp_clk_msk1_ful_pos
{0x810F,0x31},	// ramp_clk_msk1_ful_neg
{0x8110,0x00},
{0x8111,0x92},	// ramp_clk_msk2_ful_pos
{0x8112,0x00},
{0x8113,0x65},	// ramp_clk_msk2_ful_neg
{0x8131,0x26},	// ramp_rst_ofs_ful_pos
{0x8132,0x00},
{0x8133,0x40},	// ramp_rst_ofs_ful_neg
{0x8134,0x00},
{0x8135,0x93},	// ramp_sig_ofs_ful_neg
{0x8137,0x26},	// ramp_rst_flg_ful_pos
{0x8138,0x00},
{0x8139,0x40},	// ramp_rst_flg_ful_neg
{0x813E,0x02},	// int_addr_ful_pos

{0x8141,0x13},	// int_addr_ful_neg
{0x8142,0x04},	// int_en_ful_pos
{0x8145,0x11},	// int_en_ful_neg
{0x814A,0x06},	// int_rx1_ful_pos
{0x814D,0x0F},	// int_rx1_ful_neg
{0x8156,0x08},	// int_tx1_ful_pos
{0x8159,0x0D},	// int_tx1_ful_neg
{0x8160,0x00},
{0x8161,0x96},	// scn_addr_ful_neg
{0x8168,0x00},
{0x8169,0x94},	// scn_en_ful_neg
{0x816A,0x03},	// scn_sx_ful_pos
{0x816C,0x00},
{0x816D,0x93},	// scn_sx_ful_neg
{0x816E,0x00},
{0x816F,0x40},	// scn_tx1_ful_pos
{0x8170,0x00},
{0x8171,0x45},	// scn_tx1_ful_neg
{0x8176,0x00},
{0x8177,0x93},	// scn_tx3_ful_pos
{0x8178,0x00},
{0x8179,0x95},	// scn_tx3_ful_neg
{0x817A,0x04},	// scn_rx1_ful_pos
{0x817D,0x07},	// scn_rx1_ful_neg
{0x8182,0x00},
{0x8183,0x93},	// scn_rx3_ful_pos
{0x8184,0x00},
{0x8185,0x95},	// scn_rx3_ful_neg
{0x8187,0x0A},	// cds_rst_clp_ful_pos
{0x8189,0x25},	// cds_rst_clp_ful_neg
{0x818B,0x04},	// cds_rst_ful_pos
{0x818C,0x00},
{0x818D,0x3F},	// cds_rst_ful_neg
{0x818E,0x00},
{0x818F,0x41},	// cds_sig_ful_pos
{0x8190,0x00},
{0x8191,0x93},	// cds_sig_ful_neg
{0x819B,0x0B},	// cds_s2_ful_pos
{0x819D,0x22},	// cds_s2_ful_neg
{0x819F,0x0B},	// cds_s3_ful_pos
{0x81A1,0x25},	// cds_s3_ful_neg
{0x81A3,0x2A},	// cds_s4_ful_pos
{0x81A4,0x00},
{0x81A5,0x93},	// cds_s4_ful_neg
{0x81AF,0x05},	// col_init_ful_pos
{0x81B1,0x26},	// col_init_ful_neg
{0x81B2,0x01},
{0x81B3,0x39},	// col_load_ful_pos
{0x81B4,0x01},	//
{0x81B5,0x3B},	// col_load_ful_neg
{0x81BC,0x00},
{0x81BD,0xF0},	// en_col_addr_neg

{0x5003,0x19},	// Mode_pll_2	 100MHz
{0x5004,0x40},	// Mode_pll_3 // PLL disable : 0x80, PLL enable : 0xC3, [3:2]:ramp_clk_div(4)
{0x5007,0x11},	// Mode_pll_6
{0x500C,0x00},	// Framerate_mode

{0xA055,0x02},	// fmt_x_start_l
{0xA057,0x02},	// fmt_y_start_l
{0xA000,0x02},	// isp_mas_en - disable all isp block ([2]:ssd, [1]:pgain, [0]:adpc)

// MIPI settings
{0x6800,0x47},	// CLK_Post(360ns)
{0x6801,0x0F},	// HS_Prepare (80ns}
{0x6802,0x1F},	// HS_Zero (160ns)
{0x6803,0x27},	// HS_Trail (200ns)
{0x6804,0x1F},	// CLK_Trail (160ns)
{0x6805,0x0F},	// CLK_Prepare (80ns)
{0x6806,0x2F},	// CLK Zero (240ns)
{0x6807,0x0F},	// CLK,DATA LPX (80ns)
{0xB031,0x00},	// hs_delay_m
{0xB032,0xA8},	// hs_delay_l (7.4us)

{0xB009,0x03},	// mipi_value_clk_exit
{0xB00A,0x03},	// mipi_value_data_exit

// Analog timing - 20121215
{0x809C,0x10},	// DCDC, BGR enable time @ Vision mode
{0x803C,0x0C},	// pxl pwr ctl off
{0x8041,0x08},	// Ramp swing range
{0x8043,0x7F},	// ramp DC offset

// 2)Vision mode2 Rev1 9bit 750mv //
{0x8078,0x29},	// Ramp bit_sel

// FOR CFPN improvement
{0x8051,0x09},	// 20121203 cds_bias_ctl1([7:4]:off_cds_bias,[3:0]:cds_bias_reg)

{0x6900,0x01},	// row bin

{0x8072,0x00},	//
{0x8073,0x9E},	// int bin half start
{0x8074,0x00},	//
{0x8075,0x9E},	// scn bin half start

{0x5005,0x08},	// pll clkgen reset assertion
{0x5005,0x18},	// pll clkgen reset de-assertion

{0x5002,0x57},	// mode_pll_1 // PLL disable : 0x56, PLL enable : 0x57
{0x6100,0x01},	// mode_select
};
#endif /* SR261_VISION_REGS_H */

